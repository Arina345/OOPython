# Определить метод приведения к строке (__str__) таким образом, чтобы возвращалась строка следующего формата:

# {Имя точки}({координата x},{координата y}) , пример А(3,4)

# Определить метод сравнения (__eq__) и уникальности (__hash__) для точки.

# Продемонстрировать работу методов путем сравнения двух экземпляров и создания коллекции (set) экземпляров длинною не менее 5 шт.

# Добавить метод сложения (__add__).
# При сложении двух точек должен возвращаться новый экземпляр класса Segment.


from one import Point, Segment


def __str__(self):
    return f"{self.n}({self.x},{self.y})"


def __eq__(self, other):
    return self.n == other.n


def __hash__(self):
    return hash(self.n)


def __add__(self, other):
    self.one = self.x + other.x
    self.two = self.y + other.y
    return f"{self.n}{other.n} {Segment(self.one, self.two)}"


# Добавление атрибута к объекту
Point.__str__ = __str__
Point.__hash__ = __hash__
Point.__add__ = __add__

# Экземпляры класса
A = Point("A", 3, 4)
B = Point("B", 6, 5)
# B = Point("A", 3, 4)

points = set(
    [
        Point("C", 6, 5),
        Point("D", 2, 1),
        Point("E", 5, 7),
        Point("A", 3, 4),
        Point("G", 9, 1),
    ]
)

print(A)
# Сравнение двух экземпляров
print(
    f"Сравнение двух экземпляров A и B:\nРезультат работы метода __eq__: {A == B}\nhash(A): {hash(A)} hash(B): {hash(B)}\t"
)
print()

# Создания коллекции (set) экземпляров длинною не менее 5 шт.
for p in points:
    print(
        f"Сравнение экземпляра А с элементами коллекции (set):\nРезультат работы метода __eq__: {A==p}\nhash(A): {hash(A)} hash(p): {hash(p)}\t\n"
    )
print()

segment = A + B
print(segment)


# -----------------------------------ДОПОЛНИТЕЛЬНО--------------------------------------
# 1) при сложении с классом Segment должен возвращаться экземпляр
# класса BrokenLine.
# 2) При сложении с классом BrokenLine, последний должен расширить
# свой список точек.
# 3) Скрыть от пользователя прямой доступ к атрибутам координат точек.
# Изменение координат реализовать через метод set_coordinate.
# Получение текущей координаты реализовать через метод
# get_coordinate
